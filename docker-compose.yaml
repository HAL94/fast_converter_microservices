services:
  fc.service.minio:
    image: minio/minio:latest
    container_name: fc.service.minio
    ports:
      - "9000:9000" # MinIO API
      - "9001:9001" # MinIO Console
    volumes:
      - minio_data:/data # Persistent storage for MinIO data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    networks:
      - fc_network
  rabbitmq:
    image: rabbitmq:3-management # Uses the image with the management UI
    ports:
      - "5672:5672" # Standard AMQP port
      - "15672:15672" # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq # Persist RabbitMQ data
      - rabbitmq_logs:/var/log/rabbitmq # Persist RabbitMQ logs
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    networks:
      - fc_network

  fc.service.auth:
    build:
      context: ./
      dockerfile: ./Dockerfile
      args:
        - PACKAGE=auth
    volumes:
      - ./services/auth/src:/app/services/auth/src
      - /app/.venv
    container_name: fc.service.auth
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    env_file:
      - ./services/auth/.env
    networks:
      - fc_network
    restart: no
    depends_on:
      fc.service.auth_db:
        condition: service_healthy

  fc.service.gateway:
    build:
      context: ./
      dockerfile: ./Dockerfile
      args:
        - PACKAGE=gateway
    container_name: fc.service.gateway
    volumes:
      - ./services/gateway/src:/app/services/gateway/src
      - /app/.venv
    ports:
      - "${GATEWAY_SERVICE_PORT}:${GATEWAY_SERVICE_PORT}"
    env_file:
      - ./services/gateway/.env
    networks:
      - fc_network
    restart: no
    depends_on:
      rabbitmq:
        condition: service_healthy

  fc.service.video_to_mp3:
    build:
      context: ./
      dockerfile: ./Dockerfile
      args:
        - PACKAGE=video_to_mp3
    volumes:
      - ./services/video_to_mp3/src:/app/services/video_to_mp3/src
      - /app/.venv
    env_file:
      - ./services/video_to_mp3/.env
    networks:
      - fc_network
    restart: no
    depends_on:
      rabbitmq:
        condition: service_healthy

  fc.service.auth_db:
    image: postgres:17.4-alpine3.21
    container_name: fc.service.auth_db
    environment:
      POSTGRES_DB: ${AUTH_PG_DB}
      POSTGRES_USER: ${AUTH_PG_USER}
      POSTGRES_PASSWORD: ${AUTH_PG_PW}
      POSTGRES_PORT: ${AUTH_PG_PORT}
    ports:
      - "${AUTH_PG_PORT:-5433}:5433"
    networks:
      - fc_network

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d auth"]
      interval: 30s
      timeout: 10s
      retries: 3

    # This volume stores PostgreSQL data outside of the container filesystem,
    # preserving data between container restarts or recreations
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

volumes:
  rabbitmq_data:
    driver: local
  rabbitmq_logs:
    driver: local
  minio_data:
    driver: local

networks:
  fc_network:
    driver: bridge
